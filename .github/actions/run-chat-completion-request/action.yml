name: "Run Chat Completion Request"
description: "Runs a chat completion request test"

inputs:
  aws-access-key-id:
    description: "AWS access key id"
    required: true
  aws-secret-access-key:
    description: "AWS secret access key"
    required: true
  api_key:
    description: "API key for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Create config files
      shell: bash
      working-directory: interop/scripts
      env:
        CONFIG_TOML: ${{ secrets.CONFIG_TOML }}
        CONFIG_PROXY_TOML: ${{ secrets.CONFIG_PROXY_TOML }}
        ENV_FILE: ${{ secrets.ENV_FILE }}
        PROXY_ENV: ${{ secrets.PROXY_ENV }}
        ATOMA_KEY_PEM: ${{ secrets.ATOMA_KEY_PEM }}
        SUI_CLIENT_YAML: ${{ secrets.SUI_CLIENT_YAML }}
        SUI_ALIASES_YAML: ${{ secrets.SUI_ALIASES_YAML }}
        SUI_KEYSTORE: ${{ secrets.SUI_KEYSTORE }}
        NODE_LOCAL_KEY: ${{ secrets.NODE_LOCAL_KEY }}
        PROXY_LOCAL_KEY: ${{ secrets.PROXY_LOCAL_KEY }}
      run: |
        chmod +x create_files.sh
        ./create_files.sh

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-west-2

    - name: Make scripts executable
      shell: bash
      working-directory: interop/scripts
      run: |
        chmod +x deploy.sh
        chmod +x teardown.sh
        chmod +x node_setup.sh
        chmod +x proxy_setup.sh
        chmod +x print_docker_logs.sh

    - name: Deploy infrastructure
      shell: bash
      working-directory: interop/scripts
      run: ./deploy.sh

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "22.14.0"
        cache: "npm"
        cache-dependency-path: interop/runner/package-lock.json

    - name: Build atoma-nodes
      shell: bash
      working-directory: interop/nodes
      run: make

    - name: Install dependencies
      shell: bash
      working-directory: interop/runner
      run: npm ci

    - name: run e2e-test
      shell: bash
      env:
        ATOMA_API_KEY: ${{ inputs.api_key }}
        ATOMA_API_URL: ${{ env.ATOMA_API_URL }}
      working-directory: interop/runner
      run: npm run e2e-test

    - name: Collect Docker logs on failure
      shell: bash
      working-directory: interop/scripts
      if: failure()
      run: ./print_docker_logs.sh

    - name: Upload Docker logs as artifact
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: docker-logs
        path: interop/scripts/docker_logs_*.zip
        retention-days: 7

    - name: Teardown infrastructure
      shell: bash
      working-directory: interop/scripts
      run: ./teardown.sh
